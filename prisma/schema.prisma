// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String    @db.Text
  emailVerified DateTime?
  blocked       Boolean   @default(false)
  Account       Account[]
  Session       Session[]
  Employee      Employee?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int
  token_type        String
  scope             String
  id_token          String  @db.Text
  session_state     String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  expires      DateTime
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Employee {
  id           User       @relation(fields: [userId], references: [id])
  userId       String     @unique
  first_name   String     @db.Text
  last_name    String     @db.Text
  picture_url  String?
  Date_Hired   DateTime   @default(now())
  DoB          DateTime
  position     Position
  salary       Float
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  Manager      Employee?  @relation("employees", fields: [managerId], references: [userId])
  employees    Employee[] @relation("employees")
  managerId    String?
}

model Department {
  id       Int        @id @default(autoincrement())
  name     String     @unique @map("dept_name")
  Employee Employee[]
}

enum Position {
  CASHIER
  MANAGER
  JANITOR
  ACCOUNTANT
  CUSTOMER_SERVICE
  GUARD
}
